import{j as d}from"./jsx-runtime-D_zvdyIk.js";import{r as v}from"./iframe-BWMD4Peh.js";import{S as g}from"./index-Cbmrg9jL.js";import{a as y,c as b}from"./utils-DEz_iieQ.js";const h=y("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",{variants:{variant:{default:"bg-primary text-primary-foreground hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90",outline:"border border-input bg-background hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-10 px-4 py-2",sm:"h-9 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-10 w-10"}},defaultVariants:{variant:"default",size:"default"}}),l=v.forwardRef(({className:a,variant:e,size:r,asChild:o=!1,...n},i)=>{const t=o?g:"button";return d.jsx(t,{className:b(h({variant:e,size:r,className:a})),ref:i,...n})});l.displayName="Button";l.__docgenInfo={description:"",methods:[],displayName:"Button",props:{asChild:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}},composes:["VariantProps"]};const x=({primary:a=!1,size:e="medium",label:r,variant:o,backgroundColor:n,textColor:i,fontFamily:t,className:u,style:c,...p})=>{const m=o||(a?"default":"secondary");let s="default";e==="small"?s="sm":e==="large"&&(s="lg");const f={...c,backgroundColor:n,color:i,fontFamily:t?{Inter:'"Inter", sans-serif',Roboto:'"Roboto", sans-serif',"Open Sans":'"Open Sans", sans-serif',"Playfair Display":'"Playfair Display", serif',"Source Code Pro":'"Source Code Pro", monospace'}[t]:void 0};return d.jsx(l,{variant:m,size:s,className:u,style:f,...p,children:r})};x.__docgenInfo={description:"",methods:[],displayName:"Button",props:{primary:{required:!1,tsType:{name:"boolean"},description:"Is this the principal call to action on the page?\nIf `variant` is provided, this prop will be ignored.\nMaps to 'default' or 'secondary' variant if no `variant` is explicitly set.",defaultValue:{value:"false",computed:!1}},backgroundColor:{required:!1,tsType:{name:"string"},description:"What background color to use. Overrides `variant` background color."},textColor:{required:!1,tsType:{name:"string"},description:"What text color to use. Overrides `variant` text color."},fontFamily:{required:!1,tsType:{name:"union",raw:"'Inter' | 'Roboto' | 'Open Sans' | 'Playfair Display' | 'Source Code Pro'",elements:[{name:"literal",value:"'Inter'"},{name:"literal",value:"'Roboto'"},{name:"literal",value:"'Open Sans'"},{name:"literal",value:"'Playfair Display'"},{name:"literal",value:"'Source Code Pro'"}]},description:"Font family to use for button text."},size:{required:!1,tsType:{name:"union",raw:"'small' | 'medium' | 'large'",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'medium'"},{name:"literal",value:"'large'"}]},description:"How large should the button be? Maps to 'sm', 'default', or 'lg' size.",defaultValue:{value:"'medium'",computed:!1}},label:{required:!0,tsType:{name:"string"},description:"Button contents"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Optional click handler"},variant:{required:!1,tsType:{name:"ShadcnButtonProps['variant']",raw:"ShadcnButtonProps['variant']"},description:"Explicit variant to use. Overrides `primary` prop."},className:{required:!1,tsType:{name:"string"},description:"Additional Tailwind CSS classes for custom styling."}},composes:["Omit"]};export{x as B};
