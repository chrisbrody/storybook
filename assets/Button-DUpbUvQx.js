import{j as f}from"./jsx-runtime-D_zvdyIk.js";import{r as s}from"./iframe-CAc0y5bo.js";import{c as v,a as y}from"./utils-RPSJ8ZXL.js";function g(e,t){if(typeof e=="function")return e(t);e!=null&&(e.current=t)}function h(...e){return t=>{let r=!1;const o=e.map(n=>{const i=g(n,t);return!r&&typeof i=="function"&&(r=!0),i});if(r)return()=>{for(let n=0;n<o.length;n++){const i=o[n];typeof i=="function"?i():g(e[n],null)}}}}function b(e){const t=S(e),r=s.forwardRef((o,n)=>{const{children:i,...a}=o,l=s.Children.toArray(i),c=l.find(E);if(c){const u=c.props.children,d=l.map(p=>p===c?s.Children.count(u)>1?s.Children.only(null):s.isValidElement(u)?u.props.children:null:p);return f.jsx(t,{...a,ref:n,children:s.isValidElement(u)?s.cloneElement(u,void 0,d):null})}return f.jsx(t,{...a,ref:n,children:i})});return r.displayName=`${e}.Slot`,r}var x=b("Slot");function S(e){const t=s.forwardRef((r,o)=>{const{children:n,...i}=r;if(s.isValidElement(n)){const a=T(n),l=w(i,n.props);return n.type!==s.Fragment&&(l.ref=o?h(o,a):a),s.cloneElement(n,l)}return s.Children.count(n)>1?s.Children.only(null):null});return t.displayName=`${e}.SlotClone`,t}var C=Symbol("radix.slottable");function E(e){return s.isValidElement(e)&&typeof e.type=="function"&&"__radixId"in e.type&&e.type.__radixId===C}function w(e,t){const r={...t};for(const o in t){const n=e[o],i=t[o];/^on[A-Z]/.test(o)?n&&i?r[o]=(...l)=>{const c=i(...l);return n(...l),c}:n&&(r[o]=n):o==="style"?r[o]={...n,...i}:o==="className"&&(r[o]=[n,i].filter(Boolean).join(" "))}return{...e,...r}}function T(e){let t=Object.getOwnPropertyDescriptor(e.props,"ref")?.get,r=t&&"isReactWarning"in t&&t.isReactWarning;return r?e.ref:(t=Object.getOwnPropertyDescriptor(e,"ref")?.get,r=t&&"isReactWarning"in t&&t.isReactWarning,r?e.props.ref:e.props.ref||e.ref)}const V=v("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",{variants:{variant:{default:"bg-primary text-primary-foreground hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90",outline:"border border-input bg-background hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-10 px-4 py-2",sm:"h-9 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-10 w-10"}},defaultVariants:{variant:"default",size:"default"}}),m=s.forwardRef(({className:e,variant:t,size:r,asChild:o=!1,...n},i)=>{const a=o?x:"button";return f.jsx(a,{className:y(V({variant:t,size:r,className:e})),ref:i,...n})});m.displayName="Button";m.__docgenInfo={description:"",methods:[],displayName:"Button",props:{asChild:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}},composes:["VariantProps"]};const _=({primary:e=!1,size:t="medium",label:r,variant:o,backgroundColor:n,textColor:i,className:a,style:l,...c})=>{const u=o||(e?"default":"secondary");let d="default";t==="small"?d="sm":t==="large"&&(d="lg");const p={...l,backgroundColor:n,color:i};return f.jsx(m,{variant:u,size:d,className:a,style:p,...c,children:r})};_.__docgenInfo={description:"",methods:[],displayName:"Button",props:{primary:{required:!1,tsType:{name:"boolean"},description:"Is this the principal call to action on the page?\nIf `variant` is provided, this prop will be ignored.\nMaps to 'default' or 'secondary' variant if no `variant` is explicitly set.",defaultValue:{value:"false",computed:!1}},backgroundColor:{required:!1,tsType:{name:"string"},description:"What background color to use. Overrides `variant` background color."},textColor:{required:!1,tsType:{name:"string"},description:"What text color to use. Overrides `variant` text color."},size:{required:!1,tsType:{name:"union",raw:"'small' | 'medium' | 'large'",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'medium'"},{name:"literal",value:"'large'"}]},description:"How large should the button be? Maps to 'sm', 'default', or 'lg' size.",defaultValue:{value:"'medium'",computed:!1}},label:{required:!0,tsType:{name:"string"},description:"Button contents"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Optional click handler"},variant:{required:!1,tsType:{name:"ShadcnButtonProps['variant']",raw:"ShadcnButtonProps['variant']"},description:"Explicit variant to use. Overrides `primary` prop."},className:{required:!1,tsType:{name:"string"},description:"Additional Tailwind CSS classes for custom styling."}},composes:["Omit"]};export{_ as B,V as b};
