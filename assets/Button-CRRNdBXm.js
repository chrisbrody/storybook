import{j as c}from"./jsx-runtime-D_zvdyIk.js";import{B as f}from"./button-B727kkd7.js";const y=({primary:r=!1,size:a="medium",label:i,variant:o,backgroundColor:n,textColor:s,fontFamily:t,className:l,style:u,...d})=>{const p=o||(r?"default":"secondary");let e="default";a==="small"?e="sm":a==="large"&&(e="lg");const m={...u,backgroundColor:n,color:s,fontFamily:t?{Inter:'"Inter", sans-serif',Roboto:'"Roboto", sans-serif',"Open Sans":'"Open Sans", sans-serif',"Playfair Display":'"Playfair Display", serif',"Source Code Pro":'"Source Code Pro", monospace'}[t]:void 0};return c.jsx(f,{variant:p,size:e,className:l,style:m,...d,children:i})};y.__docgenInfo={description:"",methods:[],displayName:"Button",props:{primary:{required:!1,tsType:{name:"boolean"},description:"Is this the principal call to action on the page?\nIf `variant` is provided, this prop will be ignored.\nMaps to 'default' or 'secondary' variant if no `variant` is explicitly set.",defaultValue:{value:"false",computed:!1}},backgroundColor:{required:!1,tsType:{name:"string"},description:"What background color to use. Overrides `variant` background color."},textColor:{required:!1,tsType:{name:"string"},description:"What text color to use. Overrides `variant` text color."},fontFamily:{required:!1,tsType:{name:"union",raw:"'Inter' | 'Roboto' | 'Open Sans' | 'Playfair Display' | 'Source Code Pro'",elements:[{name:"literal",value:"'Inter'"},{name:"literal",value:"'Roboto'"},{name:"literal",value:"'Open Sans'"},{name:"literal",value:"'Playfair Display'"},{name:"literal",value:"'Source Code Pro'"}]},description:"Font family to use for button text."},size:{required:!1,tsType:{name:"union",raw:"'small' | 'medium' | 'large'",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'medium'"},{name:"literal",value:"'large'"}]},description:"How large should the button be? Maps to 'sm', 'default', or 'lg' size.",defaultValue:{value:"'medium'",computed:!1}},label:{required:!0,tsType:{name:"string"},description:"Button contents"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Optional click handler"},variant:{required:!1,tsType:{name:"ShadcnButtonProps['variant']",raw:"ShadcnButtonProps['variant']"},description:"Explicit variant to use. Overrides `primary` prop."},className:{required:!1,tsType:{name:"string"},description:"Additional Tailwind CSS classes for custom styling."}},composes:["Omit"]};export{y as B};
